# File: /home/developer/DEV/docker-code-server/docker-compose.yaml

# Create a .env file in this directory with the following content:
# HOST_DOCKER_GID=$(getent group docker | cut -d: -f3 || echo 999)
# (Replace 999 with a default GID if the docker group doesn't exist on your host)

services:
  code-server:
    build:
      context: .
      args:
        # HOST_DOCKER_GID is automatically sourced from the .env file
        HOST_DOCKER_GID: "${HOST_DOCKER_GID?Error: HOST_DOCKER_GID is not set in .env file}"
    image: wn1980/dev-server-box # Removed: Build locally by default
    container_name: dev_server_box
    # privileged: true # Removed: Not needed for docker socket mount with correct GID
    # If specific capabilities are needed (e.g., for debugging), add them:
    # cap_add:
    #   - SYS_PTRACE # Example: For gdb debugging
    environment:
      - TZ=Asia/Bangkok
    volumes:
      - config:/home/ubuntu/.config
      - projects:/home/ubuntu/projects
      # Mount the host Docker socket
      - /var/run/docker.sock:/var/run/docker.sock:ro # Added ':ro' for read-only mount - slightly safer
    ports:
     - "8443:8443"
    restart: unless-stopped
    # user: "1000:1000" # Keep removed - Container starts as root for supervisord

    # Optional: Add resource limits
    # Adjust these values based on your host machine and needs
    # mem_limit: 4g # Example: Limit memory usage to 4GB
    # cpus: '2.0'    # Example: Limit CPU usage to 2 cores

    # Optional: Add labels for organization
    labels:
      - "com.example.description=Code Server Development Environment"
      - "com.example.project=docker-code-server"

    healthcheck:
      # Test command assumes code-server runs HTTPS on 8443 and has /healthz
      # Adjust if your code-server setup is different (e.g., HTTP, different port/path)
      test: ["CMD", "curl", "-fk", "http://localhost:8443/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  config:
    # driver: local # Default driver is usually fine
  projects:
    # driver: local
